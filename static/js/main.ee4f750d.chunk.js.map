{"version":3,"sources":["logo.svg","components/Ranking.js","actions/Ranking.js","containers/Ranking.js","containers/Nav.js","components/Nav.js","App.js","reducers/shopping.js","reducers/Ranking.js","createStore.js","index.js"],"names":["module","exports","Ranking","this","props","onMount","categoryId","nextProps","onUpdate","category","ranking","error","name","map","item","i","key","code","style","maxWidth","margin","Card","image","imageUrl","title","height","type","raised","color","fullWidth","href","url","React","Component","defaultProps","startRequest","payload","receiveData","response","finishRequest","fetchRanking","dispatch","getState","a","categories","shopping","find","id","replace","queryString","qs","stringify","appid","category_id","fetchJsonp","json","data","connect","state","ownProps","actions","onClick","path","push","width","List","button","to","primary","App","className","paddingLeft","left","marginTop","padding","component","render","match","params","initialState","getRanking","itemLength","ResultSet","totalResultsReturned","index","Result","Code","Name","Url","Image","Medium","undefined","action","errror","history","createHashHistory","store","preloadedState","createStore","combineReducers","reducers","router","connectRouter","compose","applyMiddleware","logger","thunk","routerMiddleware","configureStore","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.ee4f750d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Card, { CardMedia, CardContent, CardActions } from 'material-ui/Card';\nimport Typography from 'material-ui/Typography';\nimport Button from 'material-ui/Button';\n\nexport default class Ranking extends React.Component{\n  componentWillMount() {\n    this.props.onMount(this.props.categoryId);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.categoryId !== nextProps.categoryId) {\n      this.props.onUpdate(nextProps.categoryId);\n    }\n  }\n\n  render() {\n    const { category, ranking, error } = this.props;\n\n    return (\n      <div>\n        <h2>{\n          typeof category !== 'undefined' ? `${category.name}のランキング` : ''\n        }</h2>\n\n        {(() => {\n          if (error) {\n            return <p>エラーが発生しました。リロードしてください。</p>;\n          } else if (typeof ranking === 'undefined') {\n            return <p>読み込み中...</p>;\n          } else {\n            return ranking.map((item, i) => (\n              <Card\n                key={`ranking-item-${item.code}`}\n                style = {{ maxWidth: '500px', margin: '32px auto'}}\n              >\n                <CardMedia\n                  image={item.imageUrl}\n                  title={`${i + 1}位 ${item.name}`}\n                  style={{ height: '200px' }}\n                />\n                <CardContent>\n                  <Typography type=\"title\">\n                    {`${i + 1}位 ${item.name}`}\n                  </Typography>\n                </CardContent>\n                <CardActions>\n                  <Button\n                    raised\n                    color=\"secondary\"\n                    fullWidth\n                    href={item.url}\n                  >商品ページへ</Button>\n                </CardActions>\n              </Card>\n            ))\n          }\n        })()}\n      </div>\n    );\n  }\n}\n\nRanking.propTypes = {\n  categoryId: PropTypes.string.isRequired,\n  onMount: PropTypes.func.isRequired,\n  onUpdate: PropTypes.func.isRequired,\n\n  category: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n  }),\n  ranking: PropTypes.arrayOf(\n    PropTypes.shape({\n      code: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      url: PropTypes.string.isRequired,\n      imageUrl: PropTypes.string.isRequired,\n    })\n  ),\n  error: PropTypes.bool.isRequired\n};\n\nRanking.defaultProps = {\n  categoryId: '1'\n}\n","import fetchJsonp from 'fetch-jsonp';\nimport qs from 'qs';\nimport { replace } from 'connected-react-router';\n\nconst API_URL = 'https://shopping.yahooapis.jp/ShoppingWebService/V1/json/categoryRanking';\nconst APP_ID = 'dj00aiZpPVlvWDl4d09uVGpoRSZzPWNvbnN1bWVyc2VjcmV0Jng9YzY-';\n\nconst startRequest = (category) => ({\n  type: 'START_REQUEST',\n  payload: { category },\n});\n\nconst receiveData = (category, error, response) => ({\n  type: 'RECEIVE_DATA',\n  payload: { category, error, response},\n});\n\nconst finishRequest = (category) => ({\n  type: 'FINISH_REQUEST',\n  payload: { category },\n});\n\nexport const fetchRanking = (categoryId) => {\n  return async (dispatch, getState) => {\n    const categories = getState().shopping.categories;\n    const category = categories.find(category => (category.id === categoryId));\n    if (typeof category === 'undefined') {\n      dispatch(replace('/'));\n      return;\n    }\n\n    dispatch(startRequest(category));\n\n    const queryString = qs.stringify({\n      appid: APP_ID,\n      category_id: categoryId,\n    });\n\n    try {\n      const response = await fetchJsonp(`${API_URL}?${queryString}`);\n      const data = await response.json();\n      dispatch(receiveData(category, null, data));\n    } catch (err){\n      dispatch(receiveData(category, err));\n    }\n    dispatch(finishRequest(category));\n  }\n}\n","import  { connect } from 'react-redux';\nimport Ranking from '../components/Ranking';\nimport * as actions from '../actions/Ranking';\n\nconst mapStateToProps = (state, ownProps) => ({\n  categoryId: ownProps.categoryId,\n  category: state.Ranking.category,\n  ranking: state.Ranking.ranking,\n  error: state.Ranking.error\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onMount (categoryId) {\n    dispatch(actions.fetchRanking(categoryId));\n  },\n  onUpdate (categoryId) {\n    dispatch(actions.fetchRanking(categoryId));\n  }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Ranking);\n","import { connect } from 'react-redux';\nimport { push } from 'connected-react-router';\nimport Nav from '../components/Nav';\n\nconst mapStateToProps = state => ({\n  categories: state.shopping.categories\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onClick (path) {\n    dispatch(push(path));\n  }\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Nav);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n// import { Link } from 'react-router-dom';\nimport Drawer from 'material-ui/Drawer';\nimport List, { ListItem, ListItemText } from 'material-ui/List';\n\n\nexport default function Nav({ categories, onClick }) {\n  const to = category => (\n    category.id === '1' ? '/all' : `/category/${category.id}`\n  );\n\n  return (\n    <Drawer type=\"permanent\">\n      <List style={{ width:240 }}>\n        {categories.map(category => (\n          <ListItem\n            button\n            key={`menu-item-${category.id}`}\n            onClick={() => onClick(to(category))}\n          >\n            <ListItemText primary={category.name}/>\n          </ListItem>\n        ))}\n      </List>\n    </Drawer>\n  );\n}\n\nNav.propTypes = {\n  catgories: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired\n    })\n  ).isRequired,\n  onClick: PropTypes.func.isRequired\n};\n","import React, { Component } from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport logo from './logo.svg';\n// import './App.css';\n// import Ranking from './components/Ranking';\nimport Ranking from './containers/Ranking';\nimport Nav from './containers/Nav';\nimport Reboot from 'material-ui/Reboot';\nimport AppBar from 'material-ui/Toolbar';\nimport ToolBar from 'material-ui/Toolbar';\nimport Typography from 'material-ui/Typography';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\" style={{ paddingLeft: 240 }}>\n        <Reboot />\n        <AppBar style={{ left: 240 }}>\n          <ToolBar>\n            <Typography type=\"title\" color=\"inherit\">\n              Yahoo!ショッピングランキング2\n            </Typography>\n          </ToolBar>\n        </AppBar>\n\n        <Nav />\n\n        <div style={{ marginTop: 64, padding : 32}}>\n          <Switch>\n            <Route path=\"/all\" component={Ranking} />\n            <Route path=\"/cateogry/1\" render={() => <Redirect to=\"/all\"/>}/>\n            <Route path=\"/category/:id\" render={({ match }) => <Ranking categoryId={match.params.id}/>} />\n          </Switch>\n        </div>\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n","const initialState = {\n  categories: [\n    {\n      id: '1',\n      name: 'すべてのカテゴリ'\n    },\n    {\n      id: '2502',\n      name: 'パソコン、周辺機器'\n    },\n    {\n      id: '10002',\n      name: '本、雑誌、コミック'\n    }\n  ]\n};\n\nexport default () => initialState;\n","const getRanking = response => {\n  const ranking = [];\n  const itemLength = response.ResultSet.totalResultsReturned;\n  for (let index = 0; index < itemLength; index++) {\n    const item = response.ResultSet['0'].Result[index + ''];\n    ranking.push({\n      code: item.Code,\n      name: item.Name,\n      url: item.Url,\n      imageUrl: item.Image.Medium\n    });\n  }\n  return ranking;\n};\n\nconst initialState = {\n  category: undefined,\n  ranking: undefined,\n  error: false\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case 'START_REQUEST':\n      return {\n        category: action.payload.category,\n        ranking: undefined,\n        error: false\n      };\n    case 'RECEIVE_DATA':\n      return action.payload.errror ? {...state, error: true } : {...state, ranking: getRanking(action.payload.response)};\n    default:\n      return state;\n    }\n}","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport logger from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport { routerMiddleware, connectRouter } from 'connected-react-router';\nimport { createHashHistory } from 'history';\n\nimport * as reducers from './reducers';\n\n\nconst createRootReducer = (history) => combineReducers({\n  ...reducers,\n  router: connectRouter(history),\n});\n\nexport const history = createHashHistory();\n\n\nexport default function configureStore(preloadedState) {\n  const store = createStore(\n    createRootReducer(history),\n    preloadedState,\n    compose(\n      applyMiddleware(\n        logger,\n        thunk,\n        routerMiddleware(history)\n      ),\n    ),\n  );\n\n  return store\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { ConnectedRouter } from 'connected-react-router';\nimport App from './App';\nimport configureStore, { history } from './createStore'\n\n\nconst store = configureStore();\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <ConnectedRouter history={history}>\n      <App />\n    </ConnectedRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}